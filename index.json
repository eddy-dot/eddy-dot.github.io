[{"categories":["Tutorial"],"content":"This article shows the basic commands for Linux server administration.","date":"2019-12-01","objectID":"/basic-docker-compose-commands/","tags":["Database","Postgres"],"title":"Basic Docker Compose Commands","uri":"/basic-docker-compose-commands/"},{"categories":["Tutorial"],"content":" docker-compose up -d Run the services in the docker-compose file in the current directory. The -d is to avoid logs inthe current terminal docker-compose down --volumes Stop services in the services in the docker-compose file in the current directory. The option –volumes is to remove volumes associated to this docker-compose.yml ","date":"2019-12-01","objectID":"/basic-docker-compose-commands/:0:0","tags":["Database","Postgres"],"title":"Basic Docker Compose Commands","uri":"/basic-docker-compose-commands/"},{"categories":["Tutorial"],"content":"This article shows the basic commands for Linux server administration.","date":"2019-12-01","objectID":"/basic-docker-compose-file/","tags":["Database","Postgres"],"title":"Basic Docker Compose File","uri":"/basic-docker-compose-file/"},{"categories":["Tutorial"],"content":" version: '2.2' #version of docker-compose 2.2volumes: #In this section volumes are specified wordpress: db:networks: #In this section networks are specified backend: proxy: services: #Specifies the containers that are going to e used wordpress: image: wordpress #Indicates the image that is going to be used restart: always ports: #ports open in the image are going to be mapped in the computer - 8080:80 # \"pc's ip\":\"container's ip\" environment: #continer's enviroment variables are specified here WORDPRESS_DB_HOST: db WORDPRESS_DB_USER: exampleuser WORDPRESS_DB_PASSWORD: examplepass WORDPRESS_DB_NAME: exampledb volumes: #containers data is mapped outside the container, using volumes, in order - wordpress:/var/www/html mem_reservation: 512M #indicates the memory reservation in MegaBytes of the container mem_limit: 1024M #indicates the memory limit in MegaBytes of the container cpus: 0.3 #indicates the cpu allocation of the continer networks: #Indicates what networks already declared in lne 6 - backend - proxy db: image: mysql:5.7 restart: always environment: MYSQL_DATABASE: exampledb MYSQL_USER: exampleuser MYSQL_PASSWORD: examplepass MYSQL_RANDOM_ROOT_PASSWORD: '1' volumes: - db:/var/lib/mysql mem_reservation: 512M mem_limit: 1024M cpus: 0.3 networks: - backend ","date":"2019-12-01","objectID":"/basic-docker-compose-file/:0:0","tags":["Database","Postgres"],"title":"Basic Docker Compose File","uri":"/basic-docker-compose-file/"},{"categories":["Tutorial"],"content":"This article shows the basic commands for Linux server administration.","date":"2019-12-01","objectID":"/basic-git-bash/","tags":["Linux","Bash","Terminal"],"title":"Basic Git Bash Commands","uri":"/basic-git-bash/"},{"categories":["Tutorial"],"content":"How to use git bash Git is a distributed version-control system for tracking changes in source code during software development. It is designed for coordinating work among programmers, but it can be used to track changes in any set of files. In this tutorial we assume you have the next enviroment: Ubuntu 20.04 Visual Code Git ","date":"2019-12-01","objectID":"/basic-git-bash/:0:0","tags":["Linux","Bash","Terminal"],"title":"Basic Git Bash Commands","uri":"/basic-git-bash/"},{"categories":["Tutorial"],"content":"1. Create an account in github.com ","date":"2019-12-01","objectID":"/basic-git-bash/:0:1","tags":["Linux","Bash","Terminal"],"title":"Basic Git Bash Commands","uri":"/basic-git-bash/"},{"categories":["Tutorial"],"content":"2. Create a new repository ","date":"2019-12-01","objectID":"/basic-git-bash/:0:2","tags":["Linux","Bash","Terminal"],"title":"Basic Git Bash Commands","uri":"/basic-git-bash/"},{"categories":["Tutorial"],"content":"3. Go to your laptop, open the terminal and clone the repository you just created cd ~/Documents/ git clone https://github.com/{{username}}/{{username}}.github.io.git For Example: git clone https://github.com/eddy-dot/eddy-dot.github.io.git ","date":"2019-12-01","objectID":"/basic-git-bash/:0:3","tags":["Linux","Bash","Terminal"],"title":"Basic Git Bash Commands","uri":"/basic-git-bash/"},{"categories":["Tutorial"],"content":"4. Get into the repository’s directory and open Visula Code cd {{user}}.github.io code . ","date":"2019-12-01","objectID":"/basic-git-bash/:0:4","tags":["Linux","Bash","Terminal"],"title":"Basic Git Bash Commands","uri":"/basic-git-bash/"},{"categories":["Tutorial"],"content":"5. Open terminal in Visual code ","date":"2019-12-01","objectID":"/basic-git-bash/:0:5","tags":["Linux","Bash","Terminal"],"title":"Basic Git Bash Commands","uri":"/basic-git-bash/"},{"categories":["Tutorial"],"content":"6. Type the following commands git congif --global user.name \"github_username\" git congif --global user.email \"github_email\" echo \"Hello World\" \u003e index.html git add --all git commit -m \"Initial Commit\" git push -u origin master ","date":"2019-12-01","objectID":"/basic-git-bash/:0:6","tags":["Linux","Bash","Terminal"],"title":"Basic Git Bash Commands","uri":"/basic-git-bash/"},{"categories":["Tutorial"],"content":"7. Open a web browser and type https://{{username}}.github.io ","date":"2019-12-01","objectID":"/basic-git-bash/:0:7","tags":["Linux","Bash","Terminal"],"title":"Basic Git Bash Commands","uri":"/basic-git-bash/"},{"categories":["Tutorial"],"content":"Commands used in this tutorial: git clone This command is used to obtain a repository from an existing URL. git config --global user.name/user.email This command sets the username and email address of your github account. git status This command is to check what changes are in the stagging area (green) and what not (red). git add --all This command add one or multiple changes (new file, deleted file, updated file) to the staging area. –all means that all changes are added to the staging area. the staging area are the changes reflected in the next commit. If a change shouldn’t be in the staging area, it can be removed with ”git rm file”. git commit -m “message” This command records or snapshots the changes in the staging area permanently in the version history. -m means that the message in the next “” will be recorded in the commit. git push This command sends the committed changes of master branch to your remote repository(the one that is in github.com). ","date":"2019-12-01","objectID":"/basic-git-bash/:1:0","tags":["Linux","Bash","Terminal"],"title":"Basic Git Bash Commands","uri":"/basic-git-bash/"},{"categories":["Tutorial"],"content":"Other important commands: git branch Shows available branches. git checkout {{branchname}} Swith the branch you are working on. git checkout -b {{branchname}} Swith to a new branch. git pull Update local changes with remote repository’s changes. git revert {{ffffff}} Undo changes done in a commit, {{ffffff}} repreents the commit id. git merge {{branchname}} Updates current branch with a branch changes. git submodule add https://github.com/{{username}}/{{repository}} Adds a idependent repository as part of current repository. git clone --recurse-submodules Adds a idependent repository as part of current repository. ","date":"2019-12-01","objectID":"/basic-git-bash/:2:0","tags":["Linux","Bash","Terminal"],"title":"Basic Git Bash Commands","uri":"/basic-git-bash/"},{"categories":["Tutorial"],"content":"This article shows the basic commands for Linux server administration.","date":"2019-12-01","objectID":"/basic-linux-commands/","tags":["Linux","Bash","Terminal"],"title":"Basic Linux Commands","uri":"/basic-linux-commands/"},{"categories":["Tutorial"],"content":"Basic Linux Commands vmstat 5 5 show cpu usage id(idle), 5 times, 5 seconds of difference one another top show current memory and cpu usage, and open applications with its resource consuming percentage. history shows the commands typed y the current user cd navigates in linux directories ls -la [optional path] lists files in the current path or the specified path mkdir directoryname mkdir command creates a new directory in the specified directory chown username:groupname file changes file’s ownership and group chmod 777 file changes permissions of a file, the order of the number represent (owner, group, other) and each number represents rwx(read, write, execute) df -h shows the usage of the server’s Filesystems touch filename.extension creates a file usermod -aG groupname username add user to a group usermod -aG sudo username add user to sudoers file sudo su username login in the system as the specified username ","date":"2019-12-01","objectID":"/basic-linux-commands/:0:0","tags":["Linux","Bash","Terminal"],"title":"Basic Linux Commands","uri":"/basic-linux-commands/"},{"categories":["Tutorial"],"content":"This article shows the basic commands for Linux server administration.","date":"2019-12-01","objectID":"/basic-plpgsql-commands/","tags":["Cloud Computing","AWS","Lightsail"],"title":"Basic PL/pgSQL Settup","uri":"/basic-plpgsql-commands/"},{"categories":["Tutorial"],"content":"Basic PL/PGSQL Commands PL/pgSQL is a procedural programming language supported by the PostgreSQL ORDBMS. It closely resembles Oracle’s PL/SQL language. The design of PL/pgSQL aimed to allow PostgreSQL users to perform more complex operations and computations than SQL, while providing ease of use. ","date":"2019-12-01","objectID":"/basic-plpgsql-commands/:0:0","tags":["Cloud Computing","AWS","Lightsail"],"title":"Basic PL/pgSQL Settup","uri":"/basic-plpgsql-commands/"},{"categories":["Tutorial"],"content":"1. Create Function ","date":"2019-12-01","objectID":"/basic-plpgsql-commands/:1:0","tags":["Cloud Computing","AWS","Lightsail"],"title":"Basic PL/pgSQL Settup","uri":"/basic-plpgsql-commands/"},{"categories":["Tutorial"],"content":"1a. Create SQL function CREATE OR REPLACE FUNCTION test() RETURNS void AS $$ INSERT INTO mytable VALUES (30),(50) $$ LANGUAGE sql; ","date":"2019-12-01","objectID":"/basic-plpgsql-commands/:1:1","tags":["Cloud Computing","AWS","Lightsail"],"title":"Basic PL/pgSQL Settup","uri":"/basic-plpgsql-commands/"},{"categories":["Tutorial"],"content":"1b. Create PL/PGSQL function CREATE OR REPLACE FUNCTION demo () RETURNS text AS $$ BEGIN PERFORM test(); RETURN ’OK’; END; $$ LANGUAGE plpgsql; ","date":"2019-12-01","objectID":"/basic-plpgsql-commands/:1:2","tags":["Cloud Computing","AWS","Lightsail"],"title":"Basic PL/pgSQL Settup","uri":"/basic-plpgsql-commands/"},{"categories":["Tutorial"],"content":"1c. Call Function EXECUTE demo(); ","date":"2019-12-01","objectID":"/basic-plpgsql-commands/:1:3","tags":["Cloud Computing","AWS","Lightsail"],"title":"Basic PL/pgSQL Settup","uri":"/basic-plpgsql-commands/"},{"categories":["Tutorial"],"content":"2. Create procedure ","date":"2019-12-01","objectID":"/basic-plpgsql-commands/:2:0","tags":["Cloud Computing","AWS","Lightsail"],"title":"Basic PL/pgSQL Settup","uri":"/basic-plpgsql-commands/"},{"categories":["Tutorial"],"content":"2a. Create test table “Accounts” drop table if exists accounts; create table accounts ( id int generated by default as identity, name varchar(100) not null, balance dec(15,2) not null, primary key(id) ); ","date":"2019-12-01","objectID":"/basic-plpgsql-commands/:2:1","tags":["Cloud Computing","AWS","Lightsail"],"title":"Basic PL/pgSQL Settup","uri":"/basic-plpgsql-commands/"},{"categories":["Tutorial"],"content":"2b. Insert demo values insert into accounts(name,balance) values('Bob',10000); insert into accounts(name,balance) values('Alice',10000); ","date":"2019-12-01","objectID":"/basic-plpgsql-commands/:2:2","tags":["Cloud Computing","AWS","Lightsail"],"title":"Basic PL/pgSQL Settup","uri":"/basic-plpgsql-commands/"},{"categories":["Tutorial"],"content":"2c. Check Table data select * from accounts; ","date":"2019-12-01","objectID":"/basic-plpgsql-commands/:2:3","tags":["Cloud Computing","AWS","Lightsail"],"title":"Basic PL/pgSQL Settup","uri":"/basic-plpgsql-commands/"},{"categories":["Tutorial"],"content":"2d. Create Procedure create or replace procedure transfer( sender int, receiver int, amount dec ) language plpgsql as $$ begin -- subtracting the amount from the sender's account update accounts set balance = balance - amount where id = sender; -- adding the amount to the receiver's account update accounts set balance = balance + amount where id = receiver; commit; end;$$ ","date":"2019-12-01","objectID":"/basic-plpgsql-commands/:2:4","tags":["Cloud Computing","AWS","Lightsail"],"title":"Basic PL/pgSQL Settup","uri":"/basic-plpgsql-commands/"},{"categories":["Tutorial"],"content":"2e. Call Procedure call transfer(1,2,1000); ","date":"2019-12-01","objectID":"/basic-plpgsql-commands/:2:5","tags":["Cloud Computing","AWS","Lightsail"],"title":"Basic PL/pgSQL Settup","uri":"/basic-plpgsql-commands/"},{"categories":["Tutorial"],"content":"2f. Check Table SELECT * FROM accounts; ","date":"2019-12-01","objectID":"/basic-plpgsql-commands/:2:6","tags":["Cloud Computing","AWS","Lightsail"],"title":"Basic PL/pgSQL Settup","uri":"/basic-plpgsql-commands/"},{"categories":["Tutorial"],"content":"This article shows the basic commands for Linux server administration.","date":"2019-12-01","objectID":"/basic-postgres-commands/","tags":["Database","Postgres"],"title":"Basic Postgres Commands","uri":"/basic-postgres-commands/"},{"categories":["Tutorial"],"content":"Basic Postgres Commands ","date":"2019-12-01","objectID":"/basic-postgres-commands/:0:0","tags":["Database","Postgres"],"title":"Basic Postgres Commands","uri":"/basic-postgres-commands/"},{"categories":["Tutorial"],"content":"1. Login in postgres (Linux) sudo su - postgres psql ","date":"2019-12-01","objectID":"/basic-postgres-commands/:1:0","tags":["Database","Postgres"],"title":"Basic Postgres Commands","uri":"/basic-postgres-commands/"},{"categories":["Tutorial"],"content":"2. Create database, and give access to a new user CREATE DATABASE mydb; CREATE USER myuser WITH ENCRYPTED PASSWORD 'mypass'; GRANT ALL PRIVILEGES ON DATABASE mydb TO myuser; ","date":"2019-12-01","objectID":"/basic-postgres-commands/:2:0","tags":["Database","Postgres"],"title":"Basic Postgres Commands","uri":"/basic-postgres-commands/"},{"categories":["Tutorial"],"content":"3. Create Table \\c mydb as myuser CREATE TABLE accounts ( user_id serial PRIMARY KEY, username VARCHAR ( 50 ) UNIQUE NOT NULL, password VARCHAR ( 50 ) NOT NULL, email VARCHAR ( 255 ) UNIQUE NOT NULL, created_on TIMESTAMP NOT NULL, last_login TIMESTAMP ); CREATE TABLE mytable (user_id INT PRIMARY KEY); ","date":"2019-12-01","objectID":"/basic-postgres-commands/:3:0","tags":["Database","Postgres"],"title":"Basic Postgres Commands","uri":"/basic-postgres-commands/"},{"categories":["Tutorial"],"content":"4. Remove all data from a table TRUNCATE FROM mytable; ","date":"2019-12-01","objectID":"/basic-postgres-commands/:4:0","tags":["Database","Postgres"],"title":"Basic Postgres Commands","uri":"/basic-postgres-commands/"},{"categories":["Tutorial"],"content":"5. Remove a line from a table DELETE FROM mytable WHERE user_id = 1; ","date":"2019-12-01","objectID":"/basic-postgres-commands/:5:0","tags":["Database","Postgres"],"title":"Basic Postgres Commands","uri":"/basic-postgres-commands/"},{"categories":["Tutorial"],"content":"6. Difference between TRUNCATE and DELETE TRUNCATE is and efficient way to remove all data from a table(Uses less server’s resources), while DELETE delete data one by one. ","date":"2019-12-01","objectID":"/basic-postgres-commands/:6:0","tags":["Database","Postgres"],"title":"Basic Postgres Commands","uri":"/basic-postgres-commands/"},{"categories":["Tutorial"],"content":"List available databases \\l ","date":"2019-12-01","objectID":"/basic-postgres-commands/:7:0","tags":["Database","Postgres"],"title":"Basic Postgres Commands","uri":"/basic-postgres-commands/"},{"categories":["Tutorial"],"content":"List Tablespaces \\db ","date":"2019-12-01","objectID":"/basic-postgres-commands/:8:0","tags":["Database","Postgres"],"title":"Basic Postgres Commands","uri":"/basic-postgres-commands/"},{"categories":["Tutorial"],"content":"Quit postgres \\q ","date":"2019-12-01","objectID":"/basic-postgres-commands/:9:0","tags":["Database","Postgres"],"title":"Basic Postgres Commands","uri":"/basic-postgres-commands/"},{"categories":["Tutorial"],"content":"Switch connection to a new database \\c ","date":"2019-12-01","objectID":"/basic-postgres-commands/:10:0","tags":["Database","Postgres"],"title":"Basic Postgres Commands","uri":"/basic-postgres-commands/"},{"categories":["Tutorial"],"content":"List available tables \\dt ","date":"2019-12-01","objectID":"/basic-postgres-commands/:11:0","tags":["Database","Postgres"],"title":"Basic Postgres Commands","uri":"/basic-postgres-commands/"},{"categories":["Tutorial"],"content":"List available schema \\dn ","date":"2019-12-01","objectID":"/basic-postgres-commands/:12:0","tags":["Database","Postgres"],"title":"Basic Postgres Commands","uri":"/basic-postgres-commands/"},{"categories":["Tutorial"],"content":"List available functions \\df ","date":"2019-12-01","objectID":"/basic-postgres-commands/:13:0","tags":["Database","Postgres"],"title":"Basic Postgres Commands","uri":"/basic-postgres-commands/"},{"categories":["Tutorial"],"content":"List available views \\dv ","date":"2019-12-01","objectID":"/basic-postgres-commands/:14:0","tags":["Database","Postgres"],"title":"Basic Postgres Commands","uri":"/basic-postgres-commands/"},{"categories":["Tutorial"],"content":"List users and roles \\du ","date":"2019-12-01","objectID":"/basic-postgres-commands/:15:0","tags":["Database","Postgres"],"title":"Basic Postgres Commands","uri":"/basic-postgres-commands/"},{"categories":["Tutorial"],"content":"Display command history \\s ","date":"2019-12-01","objectID":"/basic-postgres-commands/:16:0","tags":["Database","Postgres"],"title":"Basic Postgres Commands","uri":"/basic-postgres-commands/"},{"categories":["Tutorial"],"content":"Execute psql commands from a file \\i filename ","date":"2019-12-01","objectID":"/basic-postgres-commands/:17:0","tags":["Database","Postgres"],"title":"Basic Postgres Commands","uri":"/basic-postgres-commands/"},{"categories":["Tutorial"],"content":"get help psql commands \\? ","date":"2019-12-01","objectID":"/basic-postgres-commands/:18:0","tags":["Database","Postgres"],"title":"Basic Postgres Commands","uri":"/basic-postgres-commands/"},{"categories":["Tutorial"],"content":"The option to start the cloud computing power is using Amazon Lightsail.","date":"2019-12-01","objectID":"/basic-lightsail-settup/","tags":["Linux","Bash","Terminal"],"title":"How to get started with Cloud Computing using AWS","uri":"/basic-lightsail-settup/"},{"categories":["Tutorial"],"content":"Use AWS Lightsail to get started The option to start the cloud computing power is using Amazon Lightsail. As Nijim, S says “Lightsail is an easy-to-use cloud platform that offers you everything needed to build an application or website, plus a cost-effective, monthly plan.” ","date":"2019-12-01","objectID":"/basic-lightsail-settup/:1:0","tags":["Linux","Bash","Terminal"],"title":"How to get started with Cloud Computing using AWS","uri":"/basic-lightsail-settup/"},{"categories":["Tutorial"],"content":"1. Create aws account here (a credit/debit card is required, you are charged what you use) Or here ","date":"2019-12-01","objectID":"/basic-lightsail-settup/:1:1","tags":["Linux","Bash","Terminal"],"title":"How to get started with Cloud Computing using AWS","uri":"/basic-lightsail-settup/"},{"categories":["Tutorial"],"content":"2. Once in the aws console, look for Lightsail Service, and click on it. ","date":"2019-12-01","objectID":"/basic-lightsail-settup/:1:2","tags":["Linux","Bash","Terminal"],"title":"How to get started with Cloud Computing using AWS","uri":"/basic-lightsail-settup/"},{"categories":["Tutorial"],"content":"3. Let’s create a new instance ","date":"2019-12-01","objectID":"/basic-lightsail-settup/:1:3","tags":["Linux","Bash","Terminal"],"title":"How to get started with Cloud Computing using AWS","uri":"/basic-lightsail-settup/"},{"categories":["Tutorial"],"content":"4. We leave the instance location as the default. ","date":"2019-12-01","objectID":"/basic-lightsail-settup/:1:4","tags":["Linux","Bash","Terminal"],"title":"How to get started with Cloud Computing using AWS","uri":"/basic-lightsail-settup/"},{"categories":["Tutorial"],"content":"5. Select a platform, let’s choose Linux/Unix ","date":"2019-12-01","objectID":"/basic-lightsail-settup/:1:5","tags":["Linux","Bash","Terminal"],"title":"How to get started with Cloud Computing using AWS","uri":"/basic-lightsail-settup/"},{"categories":["Tutorial"],"content":"6. Select a blueprint: we have 2 options, create an instance with only a OS, or a OS with a pre-configured app. To get the best of the instance let’s choose OS Only and select Debian 9.5 ","date":"2019-12-01","objectID":"/basic-lightsail-settup/:1:6","tags":["Linux","Bash","Terminal"],"title":"How to get started with Cloud Computing using AWS","uri":"/basic-lightsail-settup/"},{"categories":["Tutorial"],"content":"7. Choose Instance Plan ","date":"2019-12-01","objectID":"/basic-lightsail-settup/:1:7","tags":["Linux","Bash","Terminal"],"title":"How to get started with Cloud Computing using AWS","uri":"/basic-lightsail-settup/"},{"categories":["Tutorial"],"content":"8. Name Instance and quantity ","date":"2019-12-01","objectID":"/basic-lightsail-settup/:1:8","tags":["Linux","Bash","Terminal"],"title":"How to get started with Cloud Computing using AWS","uri":"/basic-lightsail-settup/"},{"categories":["Tutorial"],"content":"9. Select just created instance ","date":"2019-12-01","objectID":"/basic-lightsail-settup/:1:9","tags":["Linux","Bash","Terminal"],"title":"How to get started with Cloud Computing using AWS","uri":"/basic-lightsail-settup/"},{"categories":["Tutorial"],"content":"10. Select Network Tab ","date":"2019-12-01","objectID":"/basic-lightsail-settup/:1:10","tags":["Linux","Bash","Terminal"],"title":"How to get started with Cloud Computing using AWS","uri":"/basic-lightsail-settup/"},{"categories":["Tutorial"],"content":"11. Attach static ip ","date":"2019-12-01","objectID":"/basic-lightsail-settup/:1:11","tags":["Linux","Bash","Terminal"],"title":"How to get started with Cloud Computing using AWS","uri":"/basic-lightsail-settup/"},{"categories":["Tutorial"],"content":"12. Add HTTPS rule to Firewall ","date":"2019-12-01","objectID":"/basic-lightsail-settup/:1:12","tags":["Linux","Bash","Terminal"],"title":"How to get started with Cloud Computing using AWS","uri":"/basic-lightsail-settup/"},{"categories":["Tutorial"],"content":"13. Activate snapshots ","date":"2019-12-01","objectID":"/basic-lightsail-settup/:1:13","tags":["Linux","Bash","Terminal"],"title":"How to get started with Cloud Computing using AWS","uri":"/basic-lightsail-settup/"},{"categories":["Tutorial"],"content":"14. Connect to the instance through ssh ","date":"2019-12-01","objectID":"/basic-lightsail-settup/:1:14","tags":["Linux","Bash","Terminal"],"title":"How to get started with Cloud Computing using AWS","uri":"/basic-lightsail-settup/"},{"categories":["Blog"],"content":"Lean startup methodology is an agile method that combines with Lean production method.","date":"2019-12-01","objectID":"/lean-startup/","tags":["Administration","Agile","Lean Startup"],"title":"Lean Startup","uri":"/lean-startup/"},{"categories":["Blog"],"content":"Lean startup methodology is an agile method that combines with Lean production method. MVP: minimum viable product(The most basic way to fix a problem) As Rise, E states in his book “Lean Startup” the methodology tries to build a product customers want with small steps, validating learning (Learning from small errors) rather than wasting resources creating a product noone wants. Build-Measure-Learn is the cycle of Lean Startup. First one has an idea, then create an MVP(Build), take notes and reviews of your clients(Measure), and then make conclusions of the collected data(Learn), and then enhance the MPV to keep on reconnecting valuable data, so that the customers pay for the solution. Bibliography Ries, E. (2017). Lean startup. Place of publication not identified: Portfolio Penguin. ","date":"2019-12-01","objectID":"/lean-startup/:0:0","tags":["Administration","Agile","Lean Startup"],"title":"Lean Startup","uri":"/lean-startup/"},{"categories":["Blog"],"content":"This article shows the basic commands for Linux server administration.","date":"2019-12-01","objectID":"/okrs/","tags":["Administration","Agile","OKRs"],"title":"OKRs","uri":"/okrs/"},{"categories":["Blog"],"content":"This is a tool to enhance the company’s productivity. OKR is the short way of saying Objectives and Key Results. And OKR is composed in this way. Objective #1 Key result #1 Key result #2 Key result #3 Objective #2 Key result #1 Key result #2 Key result #3 Objective #3 Key result #1 Key result #2 Key result #3 An Objective is “what I want to get” and a Key Result is “How do I know I fulfilled the objective”. Key Results must be measurable (# of clients, # of generated leads, % of churn rates, etc). The objectives are placed each 3 months, or quarters of year(Q1,Q2,Q3,Q4). It is recommended to have 3 objectives and maximum 5 objectives per quarter. About Key results, it is recommended to have 3 key results per objective, maximum 5(the less, the better, we don’t want to have an objective difficult to measure). Objectives calcification is measured from %0 to %100 where: \u003c40% Did not meet objective \u003c70% Not enough, keep working hard \u003e80% Objective was not ambitious It is recommended to create Business OKRs, based on those OKRs create team OKRs, and based on team OKRs create a personal OKR. With OKR it is not necessary to have a team manager but a leader, now that OKR make people manage it’s own time and objectives. Example Objective Launch website for freelance consulting Key result #1 Research and buy the best available domain name by July 1 Key result #2 Choose and implement the best CMS (content management system) by July 10 Key result #3 Publish the first blog post by August Bibliography Nijim, S. (n.d.). Learning Amazon Lightsail. Retrieved August 03, 2020, from https://aws.amazon.com/lightsail/ ","date":"2019-12-01","objectID":"/okrs/:0:0","tags":["Administration","Agile","OKRs"],"title":"OKRs","uri":"/okrs/"},{"categories":["Tutorial"],"content":"This article shows the a basic settup of a Linux Enviroment.","date":"2019-12-01","objectID":"/basic-linux-enviroment/","tags":["Linux","Git","Docker","Ubuntu","Visual Code"],"title":"Setting up a basic Linux enviroment","uri":"/basic-linux-enviroment/"},{"categories":["Tutorial"],"content":"This article shows the a basic settup of a Linux Enviroment. ","date":"2019-12-01","objectID":"/basic-linux-enviroment/:0:0","tags":["Linux","Git","Docker","Ubuntu","Visual Code"],"title":"Setting up a basic Linux enviroment","uri":"/basic-linux-enviroment/"},{"categories":["Tutorial"],"content":"1. Install Ubuntu Follow this instructions ","date":"2019-12-01","objectID":"/basic-linux-enviroment/:1:0","tags":["Linux","Git","Docker","Ubuntu","Visual Code"],"title":"Setting up a basic Linux enviroment","uri":"/basic-linux-enviroment/"},{"categories":["Tutorial"],"content":"2. Install Visual Code ","date":"2019-12-01","objectID":"/basic-linux-enviroment/:2:0","tags":["Linux","Git","Docker","Ubuntu","Visual Code"],"title":"Setting up a basic Linux enviroment","uri":"/basic-linux-enviroment/"},{"categories":["Tutorial"],"content":"a. Download the .deb installer from here ","date":"2019-12-01","objectID":"/basic-linux-enviroment/:2:1","tags":["Linux","Git","Docker","Ubuntu","Visual Code"],"title":"Setting up a basic Linux enviroment","uri":"/basic-linux-enviroment/"},{"categories":["Tutorial"],"content":"b. Install the .deb file sudo dpkg -i ~/Downloads/code_XXXXXXXX.deb ","date":"2019-12-01","objectID":"/basic-linux-enviroment/:2:2","tags":["Linux","Git","Docker","Ubuntu","Visual Code"],"title":"Setting up a basic Linux enviroment","uri":"/basic-linux-enviroment/"},{"categories":["Tutorial"],"content":"3. Install git sudo apt-get update sudo apt-get upgrade sudo apt-get install git ","date":"2019-12-01","objectID":"/basic-linux-enviroment/:3:0","tags":["Linux","Git","Docker","Ubuntu","Visual Code"],"title":"Setting up a basic Linux enviroment","uri":"/basic-linux-enviroment/"},{"categories":["Tutorial"],"content":"2. Install Docker ","date":"2019-12-01","objectID":"/basic-linux-enviroment/:4:0","tags":["Linux","Git","Docker","Ubuntu","Visual Code"],"title":"Setting up a basic Linux enviroment","uri":"/basic-linux-enviroment/"},{"categories":["Tutorial"],"content":"a. Install docker engine, follow the instructions here ","date":"2019-12-01","objectID":"/basic-linux-enviroment/:4:1","tags":["Linux","Git","Docker","Ubuntu","Visual Code"],"title":"Setting up a basic Linux enviroment","uri":"/basic-linux-enviroment/"},{"categories":["Tutorial"],"content":"b. Install docker-compose, follow the instructions here ","date":"2019-12-01","objectID":"/basic-linux-enviroment/:4:2","tags":["Linux","Git","Docker","Ubuntu","Visual Code"],"title":"Setting up a basic Linux enviroment","uri":"/basic-linux-enviroment/"},{"categories":["Tutorial"],"content":"3. Install Postgres sudo apt update sudo apt install postgresql postgresql-contrib ","date":"2019-12-01","objectID":"/basic-linux-enviroment/:5:0","tags":["Linux","Git","Docker","Ubuntu","Visual Code"],"title":"Setting up a basic Linux enviroment","uri":"/basic-linux-enviroment/"},{"categories":null,"content":"Experienced in object-oriented programming; developing, testing and debugging code; designing interfaces; and administering systems and networks. Technology agnostic, the right technology for the right solution. Quickly learn and master new technologies. Successful working in both team and self-directed settings. Worry about the problem, not the solution. ","date":"2019-08-02","objectID":"/about/:0:0","tags":null,"title":"Curriculum Vitae","uri":"/about/"},{"categories":null,"content":"Personal Details Name: Eddy Valverde Garro Email: eddy.valverde.garro@protonmail.com Phone: +506 8530 1569 Date of birth: 21/10/1995 Nationality: Costa Rica Marital Status: Single Website: eddy-dot.github.io ","date":"2019-08-02","objectID":"/about/:1:0","tags":null,"title":"Curriculum Vitae","uri":"/about/"},{"categories":null,"content":"Skills Control Version: Git DevOps: Git Actions, Basic Jenkins Virtualization: Docker, Docker Compose, Docker Swarm Databases: PostgreSQL,PL/pgSQL, MariaDB, Firebase Linux: Users\u0026 Groups permissions Management, Scripts, shells, System process management, Package Management Frameworks: SCRUM, Lean Startup, Kanban Cloud Computing: AWS Lightsail Web: Hugo ","date":"2019-08-02","objectID":"/about/:2:0","tags":null,"title":"Curriculum Vitae","uri":"/about/"},{"categories":null,"content":"Related Work Experience Aug 2019 - Feb 2020 Technical Consultant - Soluciones INRA Nov 2018 - Apr 2019 IT Service Desk Specialist Student - Intel Corporation Jan 2017 - May 2017 Call center representative - SYKES LATAM ","date":"2019-08-02","objectID":"/about/:3:0","tags":null,"title":"Curriculum Vitae","uri":"/about/"},{"categories":null,"content":"Education 2013 - 2014 Associate Degree of English - UNA (Universidad Nacional de Costa Rica) 2016 - 2019 (interrupted) Associate Degree of Software Programming - UNA (Universidad Nacional de Costa Rica) 2008 - 2012 High School - Liceo Fernando Volio Jimenez ","date":"2019-08-02","objectID":"/about/:4:0","tags":null,"title":"Curriculum Vitae","uri":"/about/"}]